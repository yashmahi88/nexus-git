name: Build and Publish

on:
  push:
    branches:
      - development
      - release
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development' || github.ref == 'refs/heads/release'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x' # Specify the .NET version you want to use

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Publish
      run: dotnet publish --configuration Release --output ./output

    - name: Pack
      id: pack
      run: |
        # Get the short commit ID
        SHORT_COMMIT_ID=$(echo "${GITHUB_SHA}" | cut -c1-6)
        
        # Pack the project
        dotnet pack --configuration Release --output ./output --no-build
        
        # Rename the .nupkg file
        ORIGINAL_PACKAGE_NAME="nexus-git.1.0.0.nupkg"
        NEW_PACKAGE_NAME="nexus-git-${SHORT_COMMIT_ID}-1.0.0.nupkg"
        
        mv "./output/${ORIGINAL_PACKAGE_NAME}" "./output/${NEW_PACKAGE_NAME}"
        echo "PACKAGE_NAME=${NEW_PACKAGE_NAME}" >> $GITHUB_ENV

    - name: Publish to Nexus
      env:
        NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        NEXUS_API_KEY: ${{ secrets.NEXUS_API_KEY }}
      run: |
        if [[ "${GITHUB_REF}" == "refs/heads/development" || "${GITHUB_REF}" == "refs/heads/release" ]]; then
          dotnet nuget push "./output/${{ env.PACKAGE_NAME }}" --source http://52.187.94.85:8081/repository/yashm-nuget/ --api-key ${{ secrets.NEXUS_API_KEY }}
        fi

  tag:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create Tag
      run: |
        git tag 1.0.1
        git push origin 1.0.1