name: Publish Package

on:
  push:
    branches:
      - development
      - release
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    environment:
      name: nexus-approval  

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release

      - name: Set package name and version
        id: set_name
        run: |
          FOLDER_NAME="nexus-git-development"  
          if [[ "${{ github.ref }}" == "refs/heads/development" ]]; then
            PACKAGE_ID="${FOLDER_NAME}.nexus-git"  
            PACKAGE_VERSION="1.0.0-${{ github.run_id }}" 
          elif [[ "${{ github.ref }}" == "refs/heads/release" ]]; then
            COMMIT_ID=$(echo "${{ github.sha }}" | cut -c1-6)
            PACKAGE_ID="nexus-git-1.0.0-release-${COMMIT_ID}"
            PACKAGE_VERSION="1.0.0-release-${COMMIT_ID}"
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            PACKAGE_ID="nexus-git-1.0.0"
            PACKAGE_VERSION="1.0.0"
          fi 
          echo "PACKAGE_ID=${PACKAGE_ID}" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV

      - name: Pack project
        run: |
          dotnet pack --configuration Release --output ./bin/Release /p:CustomPackageId=${{ env.PACKAGE_ID }} /p:PackageVersion=${{ env.PACKAGE_VERSION }}

      
      - name: Push to Nexus Repository
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_API_KEY: ${{ secrets.NEXUS_API_KEY }}
        run: |
          dotnet nuget push ./bin/Release/${{ env.PACKAGE_ID }}.${{ env.PACKAGE_VERSION }}.nupkg --source http://52.187.94.85:8081/repository/nuget-snapshot/ --api-key $NEXUS_API_KEY
    
