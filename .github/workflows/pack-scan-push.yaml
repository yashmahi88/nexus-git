name: Publish Package

on:
  push:
    branches:
      - master
    tags:
      - '*'
     

jobs: 
  build:
    runs-on: ubuntu-latest

    outputs:
      package_id: ${{ steps.set_name.outputs.package_id }}
      package_version: ${{ steps.set_name.outputs.package_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  

      - name: Build Project 
        uses: ./.github/actions/build  

      - name: Set package name and version
        id: set_name
        run: |
          echo "Checking GITHUB_REF: $GITHUB_REF"
          FOLDER_NAME="nexus-git-development"
          PACKAGE_ID=""
          PACKAGE_VERSION=""
      
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # Check if the tag is pushed from the master branch
            if [[ "${{ github.event.before }}" == "${{ github.sha }}" && "${{ github.ref }}" == refs/tags/* ]]; then
              TAG_NAME="${GITHUB_REF#refs/tags/}"
              PACKAGE_ID="nexus-git-${TAG_NAME}"
              PACKAGE_VERSION="${TAG_NAME}"
            else
              echo "Tag is not pushed from the master branch. Skipping version assignment."
            fi
          else
            if [[ "${{ github.ref }}" == "refs/heads/development" ]]; then
              PACKAGE_ID="${FOLDER_NAME}.nexus-git"
              PACKAGE_VERSION="1.0.0-${{ github.run_id }}"
            elif [[ "${{ github.ref }}" == "refs/heads/release" ]]; then
              COMMIT_ID=$(echo "${{ github.sha }}" | cut -c1-6)
              PACKAGE_ID="nexus-git-1.0.0-release-${COMMIT_ID}"
              PACKAGE_VERSION="1.0.0-release-${COMMIT_ID}"
            elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
              PACKAGE_ID="nexus-git-1.0.1"
              PACKAGE_VERSION="1.0.1"
            fi
          fi
          
          echo "PACKAGE_ID=${PACKAGE_ID}" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV
          echo "::set-output name=package_id::${PACKAGE_ID}"
          echo "::set-output name=package_version::${PACKAGE_VERSION}"
      
          echo "PACKAGE_ID: $PACKAGE_ID"
          echo "PACKAGE_VERSION: $PACKAGE_VERSION"

          echo "PACKAGE_ID=${PACKAGE_ID}" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV
          echo "::set-output name=package_id::${PACKAGE_ID}"
          echo "::set-output name=package_version::${PACKAGE_VERSION}"

          echo "PACKAGE_ID: $PACKAGE_ID"
          echo "PACKAGE_VERSION: $PACKAGE_VERSION"

      - name: Pack project
        run: |
          echo "Packaging with version: ${{ env.PACKAGE_VERSION }}"
          dotnet pack --configuration Release --output ./bin/Release \
            /p:CustomPackageId=${{ env.PACKAGE_ID }} \
            /p:PackageVersion=${{ env.PACKAGE_VERSION }}


      - name: Upload Package as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuget-package
          path: ./bin/Release/${{ steps.set_name.outputs.package_id }}.${{ steps.set_name.outputs.package_version }}.nupkg
  sonar_scan:
    runs-on: windows-latest
    needs: build  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 
      - name: SonarQube Scan
        uses: ./.github/actions/sonar-scan
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  
          sonar_token: ${{ secrets.SONAR_TOKEN }} 

  push_to_nexus:
    runs-on: ubuntu-latest
    needs: build
    environment: nexus-approval

    steps:
      - name: Download Package Artifact
        uses: actions/download-artifact@v3
        with:
          name: nuget-package
          path: ./bin/Release

      - name: List files in Release directory
        run: ls -al ./bin/Release
  
      - name: Push to Nexus Repository
        env:
            NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
            NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
            NEXUS_API_KEY: ${{ secrets.NEXUS_API_KEY }}
        run: |
            dotnet nuget push ./bin/Release/${{ needs.build.outputs.package_id }}.${{ needs.build.outputs.package_version }}.nupkg --source http://52.187.94.85:8081/repository/nuget-tag --api-key $NEXUS_API_KEY